---
title: "A Simple Linear Model"
institute: "STAT 20 UC Berkeley"
logo: "images/stat20-hex.png"
format: 
  revealjs:
    theme: "../../assets/stat20.scss"
    highlight-style: breezedark
    slide-number: true
    incremental: true
    menu: false
    title-slide-attributes:
      data-background-image: "images/hex-background.png"
      data-background-size: cover  
    progress: false
execute:
  freeze: auto
---

```{r include = FALSE}
library(tidyverse)
library(patchwork)
knitr::opts_chunk$set(echo = TRUE,
                      fig.align = "center")
set.seed(80)
```

## Announcements

- Quiz Sunday Monday
- Midterm grades published his afternoon
  - revised course bins announced next week sometime

## Quiz topics

- Casuation and counterfactuals
- Confounding variables
- Principles of experimental design
  - Replication
  - Control
  - Blinding
  - Random assignment
  

## {}

```{r out.height=400, echo = FALSE, fig.align='center', out.width=700}
knitr::include_graphics("images/id-the-slr.png")
```

::: poll
Which **four** plots exhibit the strongest relationship (linear or non-linear)?
:::

```{r echo = FALSE}
countdown::countdown(1.5, font_size = "2em")
```


## {}

<center>
<iframe src="https://embed.polleverywhere.com/multiple_choice_polls/U6XVI5aTHIfsNDOQqq61M?controls=none&short_poll=true" width="800px" height="600px"></iframe>
</center>


## {}

```{r out.height=400, echo = FALSE, fig.align='center', out.width=700}
knitr::include_graphics("images/id-the-slr.png")
```

How would you describe the relationships in terms of direction, strength, and shape?


## Which state has the highest... {.smaller}

```{r echo = FALSE}
poverty <- read_delim("poverty.txt")
library(ggrepel)
poverty <- poverty %>%
  mutate(hi_grad = case_when(
    State %in% c("New Hampshire", "Minnesota") ~ State, 
    TRUE ~ ""),
    hi_pov = case_when(
      State %in% c("New Mexico", "Arkansas", "Mississippi") ~ State,
      TRUE ~ ""),
    hi_res = case_when(
      State %in% c("Montana", "District of Columbia") ~ State,
      TRUE ~ ""))
pov_hi_grad <- poverty %>%
  filter(hi_grad == TRUE)
p_hi_grad <- poverty %>%
  ggplot(aes(x = Poverty, 
             y = Graduates)) +
  geom_point(size = 3) +
  geom_text_repel(aes(label = hi_grad),
                  seed = 29) +
  theme_bw(base_size = 18)
p_hi_grad_pov <- p_hi_grad +
  geom_text_repel(aes(label = hi_pov),
                  seed = 29)
p_hi_grad_pov_res <- p_hi_grad_pov +
  geom_text_repel(aes(label = hi_res),
                  seed = 29)
p_all <- poverty %>%
  ggplot(aes(x = Poverty, 
             y = Graduates)) +
  geom_point(size = 3) +
  geom_text_repel(aes(label = State),
                  seed = 29) +
  theme_bw(base_size = 18)
```

:::: columns
::: {.column width="25%"}

> Graduation rate?

:::

::: {.column width="75%"}
```{r echo = FALSE, fig.height=7}
p1 <- ggplot(poverty, aes(x = Poverty, 
                    y = Graduates)) +
  geom_point(size = 3) +
  theme_bw(base_size = 18)
p1
```

:::
::::

## Which state has the highest... {.smaller}

:::: columns
::: {.column width="25%"}

> Graduation rate?

:::

::: {.column width="75%"}
```{r echo = FALSE, fig.height=7}
p_hi_grad
```

:::
::::

## Which state has the highest... {.smaller}

:::: columns
::: {.column width="25%"}

Graduation rate?

> Poverty rate?

:::

::: {.column width="75%"}
```{r echo = FALSE, fig.height=7}
p_hi_grad
```

:::
::::


## Which state has the highest... {.smaller}

:::: columns
::: {.column width="25%"}

Graduation rate?

> Poverty rate?

:::

::: {.column width="75%"}
```{r echo = FALSE, fig.height=7}
p_hi_grad_pov
```

:::
::::


## Which state has the highest... {.smaller}

:::: columns
::: {.column width="25%"}

Graduation rate?

Poverty rate?

> Graduation rate for its poverty rate?

:::

::: {.column width="75%"}
```{r echo = FALSE, fig.height=7}
p_hi_grad_pov
```

:::
::::


## Which state has the highest... {.smaller}

:::: columns
::: {.column width="25%"}

Graduation rate?

Poverty rate?

> Graduation rate for its poverty rate?

:::

::: {.column width="75%"}
```{r echo = FALSE, fig.height=7}
p_hi_grad_pov_res
```

:::
::::


## The Linear Model

Expresses a predicted value for $y$, $\hat{y}$,  as a linear function of $x$.

. . .

$$\hat{y} = b_0 + b_1x \quad \quad \quad \quad b_0\textrm{: intercept} \quad \quad b_1\textrm{: slope}$$

. . .

```{r echo=FALSE, fig.height = 4.8}
p1 +
  geom_text_repel(aes(label = State)) +
  geom_smooth(method='lm',formula=y~x, se = FALSE)
```


## Residuals

A _residual_ for observation $i$, $e_i$, is the difference between the observed value $y$ and the predicted value $\hat{y}$.

. . .

$$e_i = y_i - \hat{y}_i$$

. . .

:::: columns
::: {.column width="80%"}
```{r echo=FALSE, fig.height = 4.5}
poverty <- poverty %>%
  mutate(is_MT = case_when(
    State == "Montana" ~ "Montana (13.7, 90.1)", 
    TRUE ~ ""))
m1 <- lm(Graduates ~ Poverty, data = poverty)
mt_pred <- m1$fitted.values[poverty$State == "Montana"]
poverty %>%
  ggplot(aes(x = Poverty, 
             y = Graduates)) +
  annotate("segment", x = 13.7, xend = 13.7, 
           y = mt_pred, yend = 90.1,
           lty = 2,
           color = "tomato", lwd = 1.5) +
  geom_point(size = 3) +
  theme_bw(base_size = 18) +
  geom_text_repel(aes(label = is_MT)) +
  annotate("text", x = 15, y = mt_pred, label = "(13.7, 83.9)") +
  geom_smooth(method='lm',formula=y~x, se = FALSE)
```
:::

::: {.column width="20%" .fragment}
Montana's residual:

$$90.1 - 83.9 \\
= \\
6.2 $$

:::
::::


## Residuals

```{r echo=FALSE, fig.height = 4.8}
p1 +
  geom_text_repel(aes(label = State)) +
  geom_smooth(method='lm',formula=y~x, se = FALSE)
```

::: poll
According to this model, which states will have the greatest negative residuals?
:::


## {}

<center>
<iframe src="https://embed.polleverywhere.com/multiple_choice_polls/jscxgIM0qXwMjXryZdajF?controls=none&short_poll=true" width="800px" height="600px"></iframe>
</center>


## {}

boardwork


## Estimation via optimization

<center>
<iframe width="784" height="444" src="https://www.youtube.com/embed/j2gcuRVbwR0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
<center>

Nelder-Mead Algorithm (downhill simplex method)


## Estimation via calculus/algebra

See Ed post for derivations of closed form solutions.

The upshot:

. . .

$$ b_1 = \frac{s_y}{s_x}r $$


## Estimating $\beta_1$

```{r find-b1, echo = FALSE, fig.height = 6, fig.width = 10}
p1 <- ggplot(poverty, aes(Poverty, Graduates)) + 
  xlim(0, 20) +
  ylim(75, 96) +
  geom_point(size = 3) +
  theme_bw(base_size = 18)
p1
```

Use $s_x, s_y, \textrm{ and } r$ to calculate $b_1$.


## Estimating $\beta_1$

```{r stats1, eval = FALSE}
stats <- poverty %>%
  summarize(r = cor(Graduates, Poverty),
            sx = sd(Poverty),
            sy = sd(Graduates))
stats
```

. . .

```{r ref.label = "stats1", echo = FALSE}
```

. . .

```{r stats2, eval = FALSE}
stats2 <- stats %>%
  mutate(b1 = sy/sx * r)
stats2
```

. . .

```{r ref.label = "stats2", echo = FALSE}
```


## Estimating $\beta_1$, cont.

```{r find-b1-2, echo = FALSE, fig.height = 6, fig.width = 10}
m1 <- lm(Graduates ~ Poverty, data = poverty)
p2 <- p1 + 
  geom_abline(intercept = 93, slope = m1$coef[2], col = "goldenrod") +
  annotate("text", x = 3, y = 87, label = paste("slope = ", round(m1$coef[2], 2)))
p2
```

Use $s_x, s_y, \textrm{ and } r$ to calculate $b_1$.


## Estimating $\beta_0$

```{r find-b02, echo = FALSE, fig.height = 6, fig.width = 10}
x_bar <- mean(poverty$Poverty)
y_bar <- mean(poverty$Graduates)
p1 + 
  geom_vline(xintercept = mean(poverty$Poverty), 
                col = "steelblue",
                lty = 2) +
  geom_hline(yintercept = mean(poverty$Graduates), 
                col = "steelblue",
                lty = 2) + 
  geom_abline(intercept = m1$coef[1], slope = m1$coef[2], col = "goldenrod") +
  annotate("text", x = 3, y = 91, label = paste("slope = ", round(m1$coef[2], 2))) +
  annotate("text", x = 14, y = 96, label = paste("x-bar = ", round(x_bar, 2))) +
  annotate("text", x = 19, y = 85, label = paste("y-bar = ", round(y_bar, 2)))
```

If the line of best fit *must* pass through $(\bar{x}, \bar{y})$, what is $b_0$?


## Estimating $\beta_0$, cont.

. . .

Since $(11.35, 86.01)$ is on the line, the following relationship holds.

$$ 86.01 = b_0 - 0.9 (11.35) $$

. . .

Then just solve for $b_0$.

$$ b_0 = 86.01 + 0.9 (11.35) = 96.22$$

. . .

More generally:

$$ b_0 = \bar{y} - b_1 \bar{x} $$


## Estimation in R

. . .

```{r fitlm}
m1 <- lm(Graduates ~ Poverty, data = poverty)
```

. . .

```{r}
summary(m1)
```


## The `lm` object

. . .

```{r showlm}
attributes(m1)
m1$coef
m1$fit
```


## Interpretation of $b_1$

. . .

The **slope** describes the estimated difference in the $y$ variable if the explanatory
variable $x$ for a case happened to be one unit larger.

. . .

```{r}
m1$coef[2]
```

*For each additional percentage point of people living below the poverty level,
we expect a state to have a proportion of high school graduates that is 0.898
lower*.

**Be Cautious**: if it is observational data, you do not have evidence of a 
*causal link*, but of an association, which still can be used for prediction.


## Interpretation of $b_0$

. . .

The **intercept** is the estimated $y$ value that will be taken by a case with 
an $x$ value of zero.

. . .

```{r}
m1$coef[1]
```

While necessary for prediction, the intercept often has no meaningful interpretation.


## Linear Models for Prediction

```{r, echo = FALSE, fig.height = 5, fig.width = 9}
x_bar <- mean(poverty$Poverty)
y_bar <- mean(poverty$Graduates)
p1 + 
  geom_abline(intercept = m1$coef[1], slope = m1$coef[2], col = "goldenrod")
```

$$\hat{y} = 96.2 - .9 x$$


